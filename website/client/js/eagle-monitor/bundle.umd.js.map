{"version":3,"file":"bundle.umd.js","sources":["../../../../eagle-sdk/resource.js","../../../../eagle-sdk/xhr.js","../../../../eagle-sdk/index.js"],"sourcesContent":["// --------------------------------------------静态资源性能功能-----------------------------------\r\nimport Util from \"./util\";\r\n\r\nlet resolvePerformanceResource = (resourceData) => {\r\n  let r = resourceData;\r\n  let data = {\r\n    initiatorType: r.initiatorType,\r\n    name: r.name,\r\n    duration: parseInt(r.duration),// 持续时长\r\n\r\n    // 连接过程 \r\n    redirect: r.redirectEnd - r.redirectStart,// 重定向\r\n    dns: r.domainLookupEnd - r.domainLookupStart,// DNS查找\r\n    connect: r.connectEnd - r.connectStart,// TCP建连\r\n    network: r.connectEnd - r.startTime,// 网络总耗时\r\n\r\n    // 接收过程\r\n    send: r.responseStart - r.requestStart,// 发送开始到接收开始的总时长\r\n    recevie: r.responseEnd - r.responseStart,// 接收的总时长\r\n    request: r.responseEnd - r.requestStart,// 接收总耗时\r\n\r\n    // 核心指标\r\n    ttfb: r.responseStart - r.requestStart,// 首字节接收耗时\r\n  };\r\n  return data;\r\n}\r\n\r\n// 帮助我们循环获得每一个资源的性能数据\r\nlet resolveEnties = (entries) => entries.map((v) => resolvePerformanceResource(v));\r\n\r\n\r\nexport default {\r\n  init: (cb) => {\r\n\r\n\r\n    if (window.PerformanceObserver) {\r\n      debugger;\r\n      // 动态获取每一个资源信息\r\n      let observer = new window.PerformanceObserver((list) => {\r\n        try {\r\n          let entries = list.getEntries();\r\n          let entiesData = resolveEnties(entries);\r\n          cb(entiesData);\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      });\r\n      observer.observe({ entryTypes: [\"resource\"] });// 给observer添加监听，监听性能条目类型\r\n    } else {// 在onload之后获取所有的资源信息\r\n      Util.onload(() => {\r\n        let entries = performance.getEntriesByType(\"resource\");\r\n        let entiesData = resolveEnties(entries);\r\n        cb(entiesData);\r\n      });\r\n    }\r\n    // debugger;\r\n  },\r\n};","export default {\r\n  init: (cb) => {\r\n   \r\n    let xhr = window.XMLHttpRequest;\r\n    console.log(xhr);\r\n    if (xhr._eagle_monitor_flag === true) {\r\n      return void 0;\r\n    }\r\n    xhr._eagle_monitor_flag = true;\r\n\r\n    //更改xhr 原型上的open方法：\r\n    let _originOpen = xhr.prototype.open;\r\n    xhr.prototype.open = function (method, url, async, user, password) {\r\n      this._eagle_xhr_info = { method, url, status: null };\r\n      return _originOpen = apply(this, arguments);\r\n    }\r\n\r\n    // 更改xhr 原型上的send方法\r\n    let _originSend = xhr.prototype.send;\r\n    xhr.prototype.send = function (value) {\r\n      debugger;\r\n      let self = this;// 给this设置变量\r\n      this._eagle_start_time = Date.now();// 记录方法开始执行时间\r\n\r\n      // 定义上报方法:定义高阶函数（函数返回函数）\r\n      let ajaxEnd = (eventType) => () => {\r\n  \r\n        if (_self.response) {\r\n          let responseSize = null;// 定义返回res的长度\r\n          switch (_self.responseType) {// 根据res 的返回类型，获取responseSize\r\n            case \"json\":// TODO :JSON 有兼容性问题 && stringify报错问题\r\n              responseSize = JSON.stringify(_self.response).length;\r\n              break;\r\n            case \"arraybuffer\":// byteLength 是获取buffer长度的属性\r\n              responseSize = _self.response.byteLength;\r\n              break;\r\n          }\r\n          _self._eagle_xhr_info.event = eventType;\r\n          _self._eagle_xhr_info.status = _self.status;\r\n          _self._eagle_xhr_info.success = _self.status === 200;\r\n          _self._eagle_xhr_info.duration = Date.now() - this._eagle_start_time;\r\n          _self._eagle_xhr_info.responseSize = responseSize;\r\n          _self._eagle_xhr_info.type = \"xhr\";\r\n          _self._eagle_xhr_info.requestSize = value ? value.length : 0;// TODO：一定确保value 有length属性，（数字，布尔，null ,undefinde 没有此属性，进行兼容判断）\r\n          cb(_self._eagle_xhr_info);\r\n        }\r\n      }\r\n\r\n      // 以下三种状态都代表着请求已经结束了，需要统计一些信息并上报\r\n      this.addEventListener(\"load\", ajaxEnd(\"load\"), false);// 加载完成\r\n      this.addEventListener(\"error\", ajaxEnd(\"error\"), false);// 失败\r\n      this.addEventListener(\"abort\", ajaxEnd(\"abort\"), false);//主动取消停止\r\n      return _originSend = apply(this, arguments);\r\n    }\r\n  }\r\n}","import perf from \"./perf.js\";\r\nimport resource from \"./resource.js\";\r\nimport xhr from \"./xhr.js\";\r\n// perf.init((obj) => {\r\n//   console.log(obj);\r\n// });\r\n\r\n\r\n// resource.init((obj) => {\r\n//   console.log(obj);\r\n// });\r\n\r\nxhr.init((obj) => {\r\n  console.log(obj);\r\n});"],"names":[],"mappings":"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"}